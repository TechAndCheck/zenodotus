# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `sslocal` gem.
# Please instead update this file by running `bin/tapioca gem sslocal`.


# source://sslocal//lib/puma/plugin/sslocal.rb#7
module Puma
  class << self
    # source://puma/5.6.7/lib/puma.rb#44
    def abstract_unix_socket?; end

    # source://puma/5.6.7/lib/puma/detect.rb#39
    def forkable?; end

    # source://puma/5.6.7/lib/puma/detect.rb#21
    def jruby?; end

    # source://puma/5.6.7/lib/puma/detect.rb#34
    def mri?; end

    # source://puma/5.6.7/lib/puma/detect.rb#25
    def osx?; end

    # source://puma/5.6.7/lib/puma.rb#75
    def set_thread_name(name); end

    # source://puma/5.6.7/lib/puma.rb#40
    def ssl?; end

    # source://puma/5.6.7/lib/puma.rb#64
    def stats; end

    # source://puma/5.6.7/lib/puma.rb#70
    def stats_hash; end

    # source://puma/5.6.7/lib/puma.rb#59
    def stats_object=(val); end

    # source://puma/5.6.7/lib/puma/detect.rb#29
    def windows?; end
  end
end

class Puma::HttpParser
  def initialize; end

  def body; end
  def error?; end
  def execute(_arg0, _arg1, _arg2); end
  def finish; end
  def finished?; end
  def nread; end
  def reset; end
end

class Puma::HttpParserError < ::IOError; end

# source://sslocal//lib/puma/plugin/sslocal.rb#8
class Puma::Plugin
  # source://puma/5.6.7/lib/puma/plugin.rb#107
  def in_background(&blk); end

  class << self
    # source://puma/5.6.7/lib/puma/plugin.rb#97
    def create(&blk); end

    # source://puma/5.6.7/lib/puma/plugin.rb#90
    def extract_name(ary); end
  end
end

# source://sslocal//lib/puma/plugin/sslocal.rb#9
class Puma::Plugin::SSLocal
  # Puma 4.x supplies an argument, but 5.x does not. We don't need it
  # either way.
  #
  # @return [SSLocal] a new instance of SSLocal
  #
  # source://sslocal//lib/puma/plugin/sslocal.rb#12
  def initialize(_loader = T.unsafe(nil)); end

  # We don't actually want to modify the configuration here, as it only
  # impacts the file_config values. user_config values take precedence,
  # and the only way to cleanly impact those is via the launcher object
  # supplied in the `start` call.
  #
  # source://sslocal//lib/puma/plugin/sslocal.rb#18
  def config(_dsl); end

  # User-provided configuration (command-line arguments, environment
  # variables) take precedence over file-provided configuration (such as in
  # config/puma.rb). If there are certificate files present, we want each
  # configuration to use SSL if appropriate, so we rebind each one.
  #
  # source://sslocal//lib/puma/plugin/sslocal.rb#24
  def start(launcher); end
end

# source://sslocal//lib/sslocal/state.rb#3
module SSLocal; end

# Takes a Puma configuration/dsl object, and - if there are any non-SSL TCP
# bindings and if the expected certificate files exist - then change those
# bindings to use SSL with the certificate files.
#
# If there's an unexpected binding string, then return to the originally
# supplied bindings.
#
# source://sslocal//lib/sslocal/puma_rebinder.rb#12
class SSLocal::PumaRebinder
  # @return [PumaRebinder] a new instance of PumaRebinder
  #
  # source://sslocal//lib/sslocal/puma_rebinder.rb#19
  def initialize(dsl); end

  # source://sslocal//lib/sslocal/puma_rebinder.rb#24
  def call; end

  private

  # Returns the value of attribute binds.
  #
  # source://sslocal//lib/sslocal/puma_rebinder.rb#37
  def binds; end

  # Returns the value of attribute dsl.
  #
  # source://sslocal//lib/sslocal/puma_rebinder.rb#37
  def dsl; end

  # source://sslocal//lib/sslocal/puma_rebinder.rb#39
  def environment; end

  # source://sslocal//lib/sslocal/puma_rebinder.rb#43
  def host_and_port(bind); end

  # source://sslocal//lib/sslocal/puma_rebinder.rb#52
  def rebind; end

  # source://sslocal//lib/sslocal/puma_rebinder.rb#65
  def reset; end

  # source://sslocal//lib/sslocal/puma_rebinder.rb#70
  def state; end

  class << self
    # source://sslocal//lib/sslocal/puma_rebinder.rb#15
    def call(dsl); end
  end
end

# source://sslocal//lib/sslocal/puma_rebinder.rb#13
class SSLocal::PumaRebinder::UnexpectedBindFormat < ::StandardError; end

# source://sslocal//lib/sslocal/railtie.rb#6
class SSLocal::Railtie < ::Rails::Railtie; end

# source://sslocal//lib/sslocal/state.rb#4
class SSLocal::State
  # @return [State] a new instance of State
  #
  # source://sslocal//lib/sslocal/state.rb#7
  def initialize(environment); end

  # source://sslocal//lib/sslocal/state.rb#11
  def cert_path; end

  # @return [Boolean]
  #
  # source://sslocal//lib/sslocal/state.rb#15
  def enabled?; end

  # Returns the value of attribute environment.
  #
  # source://sslocal//lib/sslocal/state.rb#5
  def environment; end

  # source://sslocal//lib/sslocal/state.rb#19
  def key_path; end
end

# source://sslocal//lib/sslocal.rb#3
module Sslocal; end
