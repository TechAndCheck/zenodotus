# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `youtubearchiver` gem.
# Please instead update this file by running `bin/tapioca gem youtubearchiver`.


# source://youtubearchiver//lib/youtubearchiver/version.rb#3
module YoutubeArchiver
  extend ::Configuration

  class << self
    # source://youtubearchiver//lib/youtubearchiver.rb#79
    def create_temp_storage_location; end

    # source://youtubearchiver//lib/youtubearchiver.rb#48
    def extract_file_extension_from_url(url); end

    # source://youtubearchiver//lib/youtubearchiver.rb#59
    def retrieve_media(url, extension = T.unsafe(nil)); end

    # source://zorki/0.1.6-e2e452206a2fdcf5d4c11b383606be4c76d3cbfa/lib/helpers/configuration.rb#16
    def temp_storage_location; end

    # source://zorki/0.1.6-e2e452206a2fdcf5d4c11b383606be4c76d3cbfa/lib/helpers/configuration.rb#12
    def temp_storage_location=(value); end
  end
end

# source://youtubearchiver//lib/youtubearchiver.rb#42
class YoutubeArchiver::AuthorizationError < ::YoutubeArchiver::Error; end

# source://youtubearchiver//lib/youtubearchiver/channel.rb#6
class YoutubeArchiver::Channel
  # @return [Channel] a new instance of Channel
  #
  # source://youtubearchiver//lib/youtubearchiver/channel.rb#23
  def initialize(json_channel); end

  # Returns the value of attribute channel_image_file.
  #
  # source://youtubearchiver//lib/youtubearchiver/channel.rb#7
  def channel_image_file; end

  # Returns the value of attribute created_at.
  #
  # source://youtubearchiver//lib/youtubearchiver/channel.rb#7
  def created_at; end

  # Returns the value of attribute description.
  #
  # source://youtubearchiver//lib/youtubearchiver/channel.rb#7
  def description; end

  # Returns the value of attribute id.
  #
  # source://youtubearchiver//lib/youtubearchiver/channel.rb#7
  def id; end

  # Returns the value of attribute made_for_kids.
  #
  # source://youtubearchiver//lib/youtubearchiver/channel.rb#7
  def made_for_kids; end

  # source://youtubearchiver//lib/youtubearchiver/channel.rb#28
  def parse(json_channel); end

  # Returns the value of attribute subscriber_count.
  #
  # source://youtubearchiver//lib/youtubearchiver/channel.rb#7
  def subscriber_count; end

  # Returns the value of attribute title.
  #
  # source://youtubearchiver//lib/youtubearchiver/channel.rb#7
  def title; end

  # Returns the value of attribute video_count.
  #
  # source://youtubearchiver//lib/youtubearchiver/channel.rb#7
  def video_count; end

  # Returns the value of attribute view_count.
  #
  # source://youtubearchiver//lib/youtubearchiver/channel.rb#7
  def view_count; end

  class << self
    # @raise [YoutubeArchiver::AuthorizationError]
    #
    # source://youtubearchiver//lib/youtubearchiver/channel.rb#55
    def channel_lookup(url, params); end

    # @raise [YoutubeArchiver::AuthorizationError]
    #
    # source://youtubearchiver//lib/youtubearchiver/channel.rb#10
    def lookup(ids = T.unsafe(nil)); end

    # @raise [YoutubeArchiver::AuthorizationError]
    #
    # source://youtubearchiver//lib/youtubearchiver/channel.rb#40
    def retrieve_data(ids); end
  end
end

# source://youtubearchiver//lib/youtubearchiver.rb#44
class YoutubeArchiver::ChannelNotFoundError < ::YoutubeArchiver::Error; end

# source://youtubearchiver//lib/youtubearchiver.rb#22
class YoutubeArchiver::Error < ::StandardError
  # @return [Error] a new instance of Error
  #
  # source://youtubearchiver//lib/youtubearchiver.rb#23
  def initialize(msg = T.unsafe(nil)); end
end

# source://youtubearchiver//lib/youtubearchiver.rb#28
class YoutubeArchiver::RetryableError < ::StandardError; end

# source://youtubearchiver//lib/youtubearchiver/version.rb#4
YoutubeArchiver::VERSION = T.let(T.unsafe(nil), String)

# source://youtubearchiver//lib/youtubearchiver/video.rb#9
class YoutubeArchiver::Video
  # @return [Video] a new instance of Video
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#45
  def initialize(video_hash); end

  # Returns the value of attribute channel.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#41
  def channel; end

  # Returns the value of attribute created_at.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#30
  def created_at; end

  # source://youtubearchiver//lib/youtubearchiver/video.rb#69
  def download_video; end

  # Returns the value of attribute duration.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#33
  def duration; end

  # Returns the value of attribute id.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#29
  def id; end

  # Returns the value of attribute json.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#28
  def json; end

  # Returns the value of attribute language.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#32
  def language; end

  # Returns the value of attribute live.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#37
  def live; end

  # Returns the value of attribute made_for_kids.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#40
  def made_for_kids; end

  # Returns the value of attribute num_comments.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#36
  def num_comments; end

  # Returns the value of attribute num_likes.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#35
  def num_likes; end

  # Returns the value of attribute num_views.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#34
  def num_views; end

  # source://youtubearchiver//lib/youtubearchiver/video.rb#50
  def parse(video_hash); end

  # written in hypatia
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#43
  def screenshot_file; end

  # written in hypatia
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#43
  def screenshot_file=(_arg0); end

  # Returns the value of attribute title.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#31
  def title; end

  # Returns the value of attribute user.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#42
  def user; end

  # Returns the value of attribute video_file.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#39
  def video_file; end

  # Returns the value of attribute video_preview_image_file.
  #
  # source://youtubearchiver//lib/youtubearchiver/video.rb#38
  def video_preview_image_file; end

  class << self
    # Convert a YouTube duration string to number of seconds
    # A duration string of "PT0H4M32S" signifies a length of 4 minutes and 32 seconds
    #
    # source://youtubearchiver//lib/youtubearchiver/video.rb#122
    def convert_video_length_to_seconds(duration_string); end

    # source://youtubearchiver//lib/youtubearchiver/video.rb#14
    def lookup(ids = T.unsafe(nil)); end

    # source://youtubearchiver//lib/youtubearchiver/video.rb#91
    def retrieve_data(ids); end

    # @raise [YoutubeArchiver::YoutubeApiError]
    #
    # source://youtubearchiver//lib/youtubearchiver/video.rb#105
    def video_lookup(url, params); end
  end
end

# source://youtubearchiver//lib/youtubearchiver.rb#36
class YoutubeArchiver::VideoDownloadError < ::YoutubeArchiver::RetryableError
  # @return [VideoDownloadError] a new instance of VideoDownloadError
  #
  # source://youtubearchiver//lib/youtubearchiver.rb#37
  def initialize(msg = T.unsafe(nil)); end
end

# source://youtubearchiver//lib/youtubearchiver.rb#43
class YoutubeArchiver::VideoNotFoundError < ::YoutubeArchiver::Error; end

# source://youtubearchiver//lib/youtubearchiver.rb#30
class YoutubeArchiver::YoutubeApiError < ::YoutubeArchiver::RetryableError
  # @return [YoutubeApiError] a new instance of YoutubeApiError
  #
  # source://youtubearchiver//lib/youtubearchiver.rb#31
  def initialize(msg = T.unsafe(nil)); end
end
