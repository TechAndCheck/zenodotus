require "test_helper"

class InstagramUserTest < ActiveSupport::TestCase
  def setup
    # @zorki_user = InstagramMediaSource.extract(
    #   "https://www.instagram.com/p/CQDeYPhMJLG/"
    # ).first["user"]


    @zorki_user = JSON.parse('{"username": "outdoorhumor",
             "name": "Outdoor Humorâ„¢",
             "number_of_followers": 444394,
             "number_of_following": 1708,
             "number_of_posts": 1981,
             "profile": "Fails âœ˜ Best Moments âœ˜ Fights\nDm for business/credit ðŸ“²",
             "profile_image": "/9j/4AAQSkZJRgABAQAAAQABAAD/7QCEUGhvdG9zaG9wIDMuMAA4QklNBAQA\nAAAAAGgcAigAYkZCTUQwYTAwMGE3MTAxMDAwMDJlMDYwMDAwYjEwZDAwMDA1\nNjBlMDAwMDNmMGYwMDAwYzIxODAwMDAwMTIyMDAwMDYzMjMwMDAwMWUyNDAw\nMDAyNjI1MDAwMGQzMzIwMDAwAP/bAEMABgQFBgUEBgYFBgcHBggKEAoKCQkK\nFA4PDBAXFBgYFxQWFhodJR8aGyMcFhYgLCAjJicpKikZHy0wLSgwJSgpKP/b\nAEMBBwcHCggKEwoKEygaFhooKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo\nKCgoKCgoKCgoKCgoKCgoKCgoKCgoKP/CABEIAUABQAMBIgACEQEDEQH/xAAc\nAAEAAgMBAQEAAAAAAAAAAAAABgcDBAUCAQj/xAAaAQEBAQEBAQEAAAAAAAAA\nAAAAAQIDBAUG/9oADAMBAAIQAxAAAAHXAAAAAAAAAAAAAAB4iHS44AAABOAA\nAAAAAAHnTN5yMZ23DyHYaG6egANTaiZqAAAAAnAAAAABrmxhjiNjV7mzEb2+\nyl52fa2+XbkY+g68ePqSMRrY7uCzJsxnFXTj5QAAAAE4AAAAeIsb2n0+jliy\nmaANjHTD1dKYfJ+nDMEkj/q8+Nsa/s8gb5vHsRzkTrS1I0xe9PQAAAJwAABj\n9xI+SH7nwCUAel2fHR5/yfsdKXx2TfFxzIfPIN7XrS6OH270R9b4wAGKITTH\nZD/Xj1t9AABOAADnnK6XO72QZoADJj+53LeVnkH537PDlWlm8nm8wuZ4+2+b\nyJFEvV00x9/4oAAGvDpzyNTiMGfQACcAARHta0db6YoAD59HJ1dvT598Pcj2\nLh6J1s1NvYtj86HaKyngetvvybmPqb5bns6cAAAIf4kkU3NgUBOADwRfqcqR\nxw/t/j8/5boo4y4f0NRBrYv0FVhFV++z854P0lUk1A9j9IebPzdtfoejpeL8\ntOdH5/y33A7mG8zdvMoHz+gdMpHFpfo0/P8A8/QAo2OzGPnPePdATgDmdOOG\nSYR2RRPKit2oau2hb6oUvqiL3ogvWqLXqghn6M/P/wCgIpbkdrQL1om9qIq9\nKptaqCfR2RR09d3hd0gdtVLbRRN70PfBQl90JfZS9r8aRlexOWR/KGbGts6A\nTgCLSmKnf7nE7GU/qG5YZpO6FvqgC/6IvevyfVRbFTEZ/QFAX/FM6G/oF60R\ne9f1PaotmpCwI73/AAcXu/PhBbaqK3SiL4r+wChL7oK/TUz1hZ5Qvb8/coZ7\nKCpwBFZVFSScTt/MXv5Ipjs6kP28tSbq175J9B9fcNaw6/xG3i8eiwFc9YlU\nD6GsbUwgfwnsO5myYZ3DcJP+XD8pybVgOwak24HmPmbxsRDvnz7oFTgCMybj\nm/75/QxWDPgJZLInLNysLgp64Sjrxo68SnbSq20iIbmnuEjpa+awiMXhCZ4V\nx689+pP8jcaJXWV1UqXb490YXhTV0VWaI50a9Q3Y1tncAnAGHMIxIYzJsGDP\ngWWT2BS3c3fdS20UdeNHXiU7aVW2kRDc09wmetpbBueuD2Cvu/wO+eo1JY0W\nRSt1UqXbFZVoG/VdjUlHZGK4vaiNa+Q3AJwADhbPSikSfBnxYsqllT9XpNO4\nKFlxFr1/PcliYyeuvNbfQrfrRZEE8xY61zfn6cmx2q+xFw86K/asWmM/ML6q\nbdg5+hKY7cZjoDF14Z1NLc9CgJwABw+4OP0oxIsPb0l+fPQ+Po8vQefQ8+ge\nfQ8+g8vQfPo8/fo8/foae1Daw7Hz7uAATgAAGGLS/TMv2MSXF9CAAAAAAAAA\nBGK8annLqBQAE4AAABpxyX4TFliXYw6olAAAAAAAeNKMVt6nr3uAAAATgAAA\nDDmjJoaucfe/HsMTlCejElczdlzCADFpV0kc5xJuBpZ9TBsFAAAAATgAAA8G\njGM+AAAfPow+Nka3vMMPjZGrkzD59AAAAAAACcAAAcHqRI+AAAAAAAAAAAAA\nAAA//8QALxAAAQMDAgIKAgMBAQAAAAAAAwECBAAFBhE1EhMQFBYgITAyMzRA\nMTYVIlAjJP/aAAgBAQABBQL7z3I1pSKQn+NPNqv+NJLyh/aVUSnSgNpbhHr+\nSDX8kGkuAKbLA6mqju9JLzSfXIVgkLcmpXHNPSW97qbbxJSQwJTYoa6sGlhg\nWnW8K063OStZwKHcqEYZeiebRv1jFYFpJxTOHAc5RAGLusb/AE7pBMJRbfTZ\nciOqk5rvqyp6NoUN5XDY0be61NXMY59Fbp33NRySIFI9UX6TnI1p5BJb4sVg\nO+9OFgUqMLgHNHwvenC4je/IjsOhBvjPRdU897kY0jyTzBE0LO8Jvgb8xGak\nZ+JjOIRfS3xa9OFe8RjSMkBdFei6p5q+CHI6ccImiZ3kTVWs1GT1wPWn4JRv\nTHZxKdvkPYj2nE6MXzbidXvigQA++P1wkRQnCrFg681PwfXhVNaiBVtS/c8g\n4mmHooSeXNPyA20GieQngsQqMfq16IiJTXaUq6rwpqUzWIZfKuEfmjG7VPKe\nvXZ3kLLWlmvSgXE6KO6DSmXUdfybaddGUS7Bol1VaKQriMkHciSCJTV1b35o\nuRI8m4l5Ue2i5YPILG8XxX6aJRGppQxrorFp/g4KIrdEoEZzlHGa1fImi5oB\nL4eRN/8ARPkyWR0STLenOm0k57HHmaP502nTijrnTafMkDrnTa506npKcquf\nqsY9cEqnc9iRwAk0RwBORsmudNSgTmudJkMAiSpJK502uulGp5qNTnTa506l\nky2JGlMPUlnJl99zuFtu/sTFoTJ0r8VqlXCEKdHs7FHfayve2+nNff1To1Sp\nn7nWqUqI5MlhNt87FrcMMLoyq3DLCxuElxnoiNTVKlxhSg8hYt5rVK/NZVBZ\nCk3RvEJq6t71yfwxIbeGBhHx5/wcN3aoX7RWV72z05v7oQqC51l6cV5tYuTf\nayvemenOPdse0ZnteGbVftnwj31/GL77Vy/ZqzTcrdt+bfEK3jt4fT3ry7+n\nDwxcI+PP+Dhm7VC/aKyve2enN/dJu9ZXvsX9jrLN6Z6c492x7Rmm14ZtN+2f\nCPfX8Yvv1XL9mq62UNyOAaBDm3xQ+yNOF/eun9pRfbwj48/4OGbtUL9orK97\nZ6c390m71le+xf2Oss3pnpzj3bHtGabXhm037Z8I99fxi+/Vcv2akO3rRFcg\n5ko93nUZOGb3p3jcie3hDk5MgfNBZLG62y6hPb2kq72B8+cngmbLrIJvFZXv\nsX9jq72B8+cngmbqnPsKo6z3y3rcotkt622JkCo2zYQqdZWrVYHwbhVwVHZL\nWQS3QchY5HsyeKsK4ouqS/n96budCKe0zGZVF4e1UOrlkjpAuovaCBlHAPtV\nDouVx+BFNcJkx3JuPaqHV2msuV1UyRbz2qh12qh0XK4/A/nXOTarqa0O7VQ6\n7VQ6ul0Pd3NQ1tkCyuPwdqodTso4xo18eR2qh1kFwHcZcXJogY2Q3cFyCJNB\nS/n965f1m9CgEtKACIMr6U8hKcbnLwvpCoi86TT5Dq0ctNI4KuKQyL/SmBA9\npGhAxJB3I6QRKM6MytHUhZCIyZ/Y7mKXhfTHFZTzk0C2OVECNtdXDTQiatSP\nGd3rylMXiZ0H9nD/AINy27Edypv7HWW7nb/gZh8PE9qnxmy4kXiCZBunzxDa\nIWZe3i1vHyF8KRUWrxbxzY2M7xXElOajm3uI23XLuIvEbvXVvFFgu4ovQf2c\nP+FctuxHcqb+x1lu52/4GYfDxPaqyuHwExWFyo9Zl7eM7PkmzYbT/RjO8VeN\n9rMPldMh3AAP47xmcwVpf4dB/Zw/4VI1qdDf2Ost3O3/AAMw+Hie1VICyQBr\nUa2sy9vGdnyTZsNp/oxneKk2ONIlVmHy+m6P4QMTRvff/wCa59B/Zw/4VxXS\n34oUj7jTf2Ost3O3/AzD4eJ7VdiuDboUlsuLepvUYAPEOZe3jOz5Js2G0/0Y\nzvFR5LTFmuKyKhCTpfTcH8yV5F2FxBhl5oKP7OH/AArlt2I7lTnIPIKutlbc\nJIB8kGYvTq+J7VfdoxWbyj5HN63NB7GZe3i70daLjFSbEtFrS20d6MDjO8U6\nZ1LJ6vcfqF16Dk5Qh+K+Q5Ec2MqxZlFTiHaLv/Ghk5Jzo9pnfx0ntTTkdMkQ\nr7Jhj7U07KHKkhZM8lqvf8fFnZD1qIOO9RmjqMTMn4WXe6fyaRJEq1l7UV2p\nqfdZVybDMtsn9qamSesze1NXWet0P0XMvE9E0TybmDmDgn5wq0StE6NE6dEr\nROjRK0Tp0StE6NErROnROjROmUZACGmq+XIYsKSN6EZ9hVRqSCrJN5hRtKMT\n3QTouqfXnSea5qcKebJA2QMBnxCIuqfVmy+OmN4U8+SBp2MeWCQZGkb9JzkY\n2VLcZWN4fpEG0rDMfCPGmML9GRKGGikJJc1ET6ZXoMb3K5zhotBlGBQZgi+a\naUIVGmFNTR/Vmm5hOlRotDIcNMuKpTJwHU0rHd1xGNp80DaJcqIY5qQafWmG\n5Y+9+a5ba5VcDkr/ALV/2rhetcqkG2kTT67lRrTEUpP8a4G8f8aQXlDXxX/A\n/8QAJhEAAgIBAwQABwAAAAAAAAAAAQIAAxIEETETIUBBIiMzQlBRcP/aAAgB\nAwEBPwH8jTSbTsPDWsspb0JpvkU5+zNVQPqrwZZWa2xPgAbnaX1ivT9NZqux\nCfqKctO4M1FfUoB9geBW2LAyxsHPsGXt1DlKXCLiw3hc4PY3gEIR2iW21LsD\nF1pb7RH1jrwojtZcPjMGK8+BmYGI4hcnmBiP7z//xAAnEQABBAEDAwQDAQAA\nAAAAAAABAAIDESAEEjAQITEFQEFQEyJRcf/aAAgBAgEBPwH6+1allEYs9LV8\nt9XSBpDf6tfLb6+AtHqN42Hyo5BILHW+InqTXdQS/kn3la6Q1/q9PeS5hUEu\nyYt+DgDwHB43NIQJaVqYjI3soAY2hadu6QYg5HEF190+KKU9wnenxj5TNDEU\n1rIT+oR3HxiMqVKulLaEQD5W0DwtoVKlSpVkOc4jnOV5XnaJ9yecYnnGR5QP\ne1w1yUqxpV9f/8QAQxAAAQICBQYLBQUJAQEAAAAAAQACAxEEEBIhMSJBUXFz\nsRMgMDIzNGFygZHBI0BCgpIUYqHR4VBSdIOEk6PC8ENT/9oACAEBAAY/Avfi\n52ARcf2PwbcBj+x5583vd9yvitWLj4LB/ksH+SxcPBXRW+KySDq40/hGHvE4\njg1ShMLtayZtHkpxYvqry4ro/wAV0TV0TV0autDxU4cVZ3jzUozJal7NwNXB\njE4+7ziOkrNGaRvVqkPvWQwDi6+NltBU4DpHQVZpDbQ7UXTvPu1iBlO0rhKS\n46s6kwADjSWSFPjycJhWoH0qy8SPuZc4yAXBQAQxTxfp44CmpZ8SrQwdVMcf\nK52lSfgrvcC5xkArLLoYVlnHmgmDRfU7zqHIWXiYWlhzq7lr1wcPox/00Gs4\n8k52ZqCeeyvxTG6VfiOQLXCYK0sOHLfZ4XipZ855AJwOlSOGYoywlfUZYyV6\ntuxzKLyJa5GG/lJ/EbguGfzjhyV/NKzEK4AVzkJo3iehdp5K03nt5SX/AJt3\ncjc3zRmxs8yvk5ugrKD2aldSPNdZYust8F0j36l7GHLtcjELza7EBbXOn4IH\nkJt5ruSMuc64K0cX8jOH5KZlcsFOqfEwU8GKbjPkSPiF4UuRbCGAuUsXaFOH\nRiW90ldVd9BVmkQi1NZR28ISuqu+gotiwZP7bl1Z30Fe1gWZ4TBC6q76Cuqu\n+gqf2V41MK4J9HnE0XzV1Gij5SurxPoKnEgvaO1pCnadbztRZBYXu0zXVXn5\nCuqn6CrMVthyyrzmCnCo5LexpK6q76CpUiCW/gmcCLZcuqu+grqrvoKnEoxD\ne6QpYP0Ij4TfyBccBeosd2ZRaTSRaEPAHOazCjN1HO1UdjsWxZVRNTdyCoXz\neixrhd5m6uRvCa6j5DIonIZtKZSXNBjRL56BW+lNaBGh3k6QiaRlMhNmQc+h\nSAkBUYUdocwoQSZ2IwE/HiQqTRhYDzeBpUOKEOO/tuR+8CVSe8NypGzduT9k\nd4qH8Qd9UTU3cgqJqd6KittTm9p/GqE2cpw27yqKwmeWKondbuQVE1O9FRNm\nFD2o3FP2p3BUvuKld0VQvm3VP249KoWy9SqNsm7lR+/6KX3J8hDb2zVnQz0V\nJ7w3KkbN25P2R3iofxB31RNTdyComp3oqJ3mb6oHcbvKo3eFUTut3IKianei\nomzCh7Ubin7U7gqX3FSu6KoXzbqn7celTYsWJEaQ2zkqHDF4Y0NVH753JndT\nm8eE3s9U/UVSe8NypGzduT9kd4qH8Qd9UTU3cgqJqd6Kid5m+qB3G7yqN3hV\nE7rdyComp3oqJswoe1G4p+1O4Kl9xUruiqF826p+3HpU6j/GGh/gnFgm6VwQ\nEeTAz4NFUQdp48L5U/UqU3PaBUSHOVppajGdHD5ssysyqY+eSaQb/Gp1IEdr\nAQLrNVEaMZFUTvM31QO43eVRu8KnUgR2smBdZqooz2SqJL9ySbBbEDJOtTIm\njBc8Pm+1OUlSp/uyVJGctG+ptIMdrwJ3Wankf/cb6qNHGAh5Q0iZTXNM2uEw\nm0uEMiLededAjOn8eF8tXD0e+GcR2aFlwYwd2SK6KP5D80YNBhPaXXWjj4IO\nHS4yQZToTy8fE3P4Loo/kPzXsoEUu+9IL7VSfBUeM4Gy0g+RXRR/IfmoMWA1\n4Eg3K1qDHiA2GkOuXRR/Ifmuij+Q/NHgoEVzvvSCfSKSZTw/RGDGZbgG+WjU\nuij+Q/NdFH8h+aEKEyxABnL80ykUUzlihwsCKHfdkV0UfyH5osoUJwefifm8\nFBixp861+K6KP5D80yLBa9oDLOUoMN0OPNjA03BQmQGRAWunlBMB0J3/AGbj\nwnat9d8NnkiTCZd2L2FHEvutV8Ay7pV0Brzqmupj+2VIUdnCal0DvoKsx4I1\nEK6hj+2VM0YM+WS6vbb3SVN9EaB2sIQcITJHsVvg2z1KbYJI7Gle3g5Pa1Sb\nCY4q6hj+2VIUcgdwqzFbZVmHAY86l1Mf2ysiiy1QyvbwMntaVdCZPRJXQ2jw\nXRM8lNsNoOqqJr48J2sJp0it+pRtp6BUrZO3J+yO8Vf1X+1Q2Q9VRtm3coG0\n9F/McokF/wAQx0FPo8W5wP4qHR4eE8d5TYbBJrRIBUXW5fa4jQ55MmzzK9XF\nOmBwrRNjlB1O3VYhEOAIOYphg3Q3i1LRpHFe7jz/AHTNM7Lq36lG2noFStk7\ncn7I7xV/Vf7VDZD1VG2bdygbT0X8x1TKZCz5L9eYo0l4y4vN7tVF1uUH5t6p\nHhvVL+X1R1KDqduqjbQelVG7p38R7tAR472aQokM6636lG2noKrgBV/Vf7VD\nZD1VG2bdygbT0X8x1T4UUTY4SKDWiQF1VF1uUH5t6pHhvCpfy+qOpQdTt1Tq\nQ90W24zuN1VG7p38QN/eKHIT+F3rW/Uo209AqSRjwbtycHxHuHBnF084q/qv\n9qhsh6qjbNu5QNp6L+Y5R4kMye1swocZmDh5J8QdIclmtMn+6FRdblB+beqR\n4bwqX8vqjqUHU7dVHhjnQnWSFEdRwHRQJgHOjGpD7TuJZzNu5ERBi3cmnOLj\nU/Uo209AqVsnbk/ZHeKi93NFJmfqq4UxnMybMgFDhznYaGzVHZ8RfP8ABfzH\nKldxOorzkxL2605rD7KFkjXnKh90Ki63KGBi1zgfNPgF1kOzqLZimJbliJJ7\nnXAAkqDqduqju/8ANzrL/IVW2dHFygN9bnnMi48iQcCnQn801OAzhPhmBbm6\nfOkosL7NK20tnwn6IxeDtzbZlOS6p/k/RR4oFm0S79EIUeHwobhMyK6p/k/R\nZFFE+16dHjm+Vw9AuB4C3lEztSUWB9ms2xKdtNiMNl80CbznTW/ZcBLpP0UJ\nog2Cwn4pzRdCymHEZir6J/k/RdU/yfouCYzg4RxAz6ymxSy3ZGmU11T/ACfo\nn0mxZm4Okuqf5P0UIiFYLRLGdYhNzY61LkuEbzm7lfz241YLAVYCvALCrALA\nV4BYVYBYCvAVYCsuz5kXuxPKCIzoz/0kHNwPvJJwC+4MOVLH4FGHE5h/6amM\nPeODh83fy9l2OY6FwUfm7lMYe7cFBwznSu33CTscx0KxEE4f/YK0wzHuc3GQ\nViFczeu33Ky8TC9k+YUnZL/cZc52gKbzk6Fd7mXFFxxKuuUjlN7VjZOg8re6\nZ0BSh5DexX3+62RzW8TQshxloXtGeS51nWFkvafHi5TmjxXPnqXs4fmsp0h5\nK+/3aQ5zuRxVzl0jvNdI76le9Y1Xe7knAIuP7H4Nvj+x558ymf2D/8QAKhAB\nAAECBAQGAwEBAAAAAAAAAREAIRAxQVFhcaHwIDCBkbHBQNHx4VD/2gAIAQEA\nAT8h/ORiAlrWX02P+Pe7U5/+ObnPY8aVVW6/lEywcWK+NDPxQMuUq7/6P3R/\nnv3S8+Yrkw9lDSLxT4VglyqfGxyfkRQnFpaUb2laYvYj+6bzXCflXz1xWnHm\nmrlnC+VK/prQhyUrNHLlSNk8SPitwH0/ujmS9X9aN9F19sL0/CPx4ZDoatcz\nUif8VOhLMGX3oK4b5vv4bnceI+OOpf3qBmhl+yp2NDV761KEml/GdYMvWHLe\ns/Luu/VcmdeKOo4k0E1Kjlr42520So5X1Pw0jUFmfwywXStLtUHfi7FCHq+n\nLxArBnQ6gt6sPoqKhfQMBvc6ybLMqPac/HbKBkcyopS8kyeVFNk/AHkKVauQ\n3+nF41HDm6vjglzcqdjhU+5XKObeoDqWUbHjWdalWXTTxupDXo3dtaKbziEU\nAXVoZKJP+qJqxrqu/jid1OVoUfWijyFMqjMcasRRMpogOph8jW7IqNO4b/7Q\niSZeaelVYjq7UFN3fefJxLZ3e1RtWeBQXCuYSKNhocqdhiEDamWN3ycgNydn\nem22HzJsbTx3pFuavbfyVA7VfS3ntRYVXrRsEcCsg5VeK6vIq/1GwalIzSXy\nrTfYbVa3M8tIj+h+6AACweNsTV5HwlQ81DItN3hhEcqujm9xTTJ9f3X90oGf\nqKvJ5Q1Jg8R9VOGc1RSmcmsE0Vf1BTJEKTHkWi1j7KLnkwpR/rVZLW9NPJVS\nEOql2EE5ytBEAigMWjPBhhnvXANHIoU6FcBUXw5nrQCRNIt5MPHyFT8LyWpt\nd8tDI2LHQoAyZJ12GYNbyR9mnAByRL6QYZrAaQHocO1wkf0zHOO6Fp3QI5g+\nylM4J9njqQKmGPAFLGltGeG9HZhbNIDJCvZcp0n6oW3OTm0dx66iYZxck4K9\nmoysnw9N8c42BJmvXVbHO/VRFay5PkFlxVRzLB927QmXGaF35RQA2ChMk96P\nUyZdzcrVa3mSUYSdMV0XyoQFnvghm9acwYFDNPenIiEI3Gr5bjWZA4XovDxZ\nygpQzaEcmrWJwc8akjM1DkHhRkVkBYKEyT3ofKa5nE2afWMSIw4IZp71ANxo\nBiWSA3k50HLno3qQeOxs4++p/F8De7huprcwzs+6jLCToyu7b0Y+a2FALGqe\ncYk4NL1Doyuyb4KW4ALOs13XdrMpOdp81OVdh3wJInRR3XZXX6cUwHoTSmGz\n44N8vZ/aPRjA93TdiM7Puoywk6Mrum/gMxu97YodGV2bfwKKBnXa7ru1mV0H\nzU5V2HfBCVcIRErqcaUtAFzQIp29agk3UHSpG0t7eN8jdad62we7puxGdn3U\nZYSdGV3TfwGY3e9sUOjK7Nv4FFAzrtd13azK6D5qcq7DvgXMiKbpT5OtEDNL\nMC6E1eBchp15tFi2XkBVi7XoyBmv4q8FsLhDTHSTG0kUdzSJZk48MLKJA5nG\nBuxJpyI3owmxRMLXjmkfFW4pjd72wNWEmnIjejCbFOl2KnBT9NODkj6i1LQR\n4AT7prqkWoB9U4qB95ShLbkHA/0VcVljx0Zib8acqUGSL2BhKKjA1ZCo+wJu\nNRmEg4fsX96LLQkqznfXjs7meEQsgmTufunDfxA95MFggFlp+A+aWGxbDpw4\n1kaqxzzLXBYVbXIHvLS/LmREFsg4VKEZxrccFh4jGANk6c6TJUa04YrFhdip\nB95aMZpiBY2BsUudkAwrdfVEN5aDBaeg7/OCZd19UvQHMTzE2abuXIHyYLAt\nn5F7Bm0D9weraT64LC6GQQZldOdMVMhBIRvTvPKIm0aNJnAI+1deeN6W6KOe\nC0qaxNAlpdOk3XqUEoRmp0pEJve+mBcWaUfzvhTGUtRR80CFI5JQKMNpnP1a\nlQJLfdpWdrhNRUhNHmzEC7RRZyUlRBCtGPmkPQiAoS8PS5XCTAdQSL14cyuK\nI759sSyY+JcOtWtBmripq9WYGABAJqYFM4vHkulHBEcer4Cdh3YgMnA7pvTv\nWyu84q7DlWXlY9g+9I8kyNhnTtaCNCiPV20Cu3bFJmhwpCWnnNIEqDi1ko8m\novTAlx25Y6IsM3OrWZkJGsgHnOjkeHicr18crsfpU/1HTj1fBzsO6nhBk4Hd\nN6d62V3nFXYcsFNRIg07B7VtvEtP9P1h37Yrq/lrseHCutV3rdh3fbB3bZ4O\nLTFG5x8fESK3AGPw49XwcQSHKmZc4GGTgd03p3rZXecVdhywt5+KJAKAaGHf\ntiur+XEbutV3rdgNmFg3EcOGCkTPK9HgjXPoHky4I8+n+ser4OIgQMJpdUgg\nUMPUwycDum9O9bK7zirsOVXNhXErWj0btT3okhBBx6+mdJSpWReVd+2K6v5c\nRu61Xet2FvT16BHvar++bxwVG4IYytoBoeCx+1fyYYXb81Ta/MGHV8HOw7sU\nCyxLNjAIeggXKf3RAwSDWCKDIuI8CH3XYcq6nXHSvTWep8VfgJ2XsHpXcNq7\n9sUkXoA3fDSH4tpMQj9VyoUQif3Sby42Ix0VVYZcG56OEdCWJpLZ7/OIacW4\nulFvdfJEOQhKdK7E/DgubkCrrm/bdgjLhXMzwiSJojLnyaqXy4YFlg2tyVm6\nhBihRJtOuAMQWm6fFOOdKi2xtX3HK4RXrY/j0inlBIvHJKvxC2aVnZilQ83w\nIzXpUaeZyeZs8aHFicAI1M0Z/Q4VCcoBqCM8AQdC8ZiItPpgEruo58vLGf8A\na+iIGnlW03+NIEehxccFG4eZX86kHMHnX86ssqSc71/OoDIHpgpmnpX8jH+d\nQGQORh/Ir+Zgg5g1/OqCIgjav51AGQHIw5BJ3aRBOo+YFN3L5okc5X5LlgEq\n1M7lgcKLEHmGpPQ41NS3p+lACCrifkPN2t3d+qOA87LAPXUyJvs/I4UBIKuJ\n+MzU2j0HCj6j8DJ2MnOkqTZfv9KLjT8NoYc1plNqb/4oR8vwmh3qRTBKcNmo\neLacnk/gmqe2vtVmAZDIoWPw2mvpu0jMpLV5uVCcn+jUUd9182bPWdqULqPe\ngL3vxbw/c+DKrq+wQe1W43i46VmKVXSyHh6igrcXhmtD1n9FWJNkso1AAQfi\n3t0jgb+NDMTSmkcqToqM1nJSpGXval5+8pzs81aDr0UDSedBkB+OocBLWsFk\nbH/HklWL/r/xyfWsONJRJW6/8H//2gAMAwEAAgADAAAAEAAAAAAAAAAAAAAA\nCAAAAAAAAAAAADCDCAACIAAAAAAAAABDswoIAoYgAAAAAAAAADAYgicJgAgo\nRAAAAAAAFIwggA0mSwggk6AAAAABOQggkG4ykAggghSAAAABIggklqyeKKow\nggtQAABGCjcmmptefuWdiZrSAABCbKKFPvqLEPFKPNI4AABB/JKENvqNDMHI\nPDEagAFDB1CjaXQWcPnQhe4wgAECAKPNFPClqCKKPAgIAAAIwKFFFPNGKPKK\nKgloAAAEQoFDqFhiuvMPGgpQAAAEB4gskkggogkggkiAAAAAEDAggggggggg\nhCgAAAAAANDwggggggghmAAAAAAAABEPBQBghCjYAAAAAAAABIAAAIAEIAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAP/EACYRAQACAQIFAwUAAAAAAAAAAAEAESAw\nMRAhQVGBQFBxYZGx8PH/2gAIAQMBAT8Q9vqVGfQF4VK1Q4nH9OkZynZ+CED6\n4dmPv6nGtIOLEN2EOgg/MdZsAnYEXDb2j464JoBgCvRGIhN38zk4qLKBm0Oy\njz2xdOwbpzwA6PMi1LeIJZPEFNv4+0RJzJHng53Ll8FSlm8oFSg1DLl8Lzdc\nxdcxqVlWdSvUmu4mu5GqvrR0b1Ll43L9v//EACcRAQACAAYBAwQDAAAAAAAA\nAAEAERAgITAxQVFQkdFAYXGBscHh/9oACAECAQE/EPTlCPjLQ32IQZaHnBHc\nfDFCcwNl+SeERp9zIXPPasxAK6jJ4Woz807E8f1NbtR/zJRsPrI4PYyzmiQh\n3IWGiRTnm/bLRpmVGUFIvNa9mkLu57fEU1V/Z8SqV/z7wLfCGRWZUtlJSUlE\npA2wnCIMvRF20lIAlICUlU5VeU4nf0acTvanGQalZb1LY31CwmsaS14lstgv\ncuWnOGyHGR5hmS4FZXAynWG44DXKLIY3hcUINy8LlxwFGYVu2Z0uJW2FwK2K\nuNNktDTbQxcpxpl4A9P/AP/EACoQAQABAwIFAwQDAQAAAAAAAAERACExQVEQ\nYXGBkaGx8CAwQMHR4fFQ/9oACAEBAAE/EPzpNCJyq1gu2wwf8eJuGQ10nb36\nf8dHDPNd3QzTNqJVyu/5SkMvJD1pZGpo37q9dX/cUBgBvQQ3A3oPnVl/S1Fy\nDon3hQtE1H2fSCIAJV0KZ84P3dXP5G0RMz0MtOMAjeILvpWfqMXkbqHgXmC+\nYVl35kehUPCd/wBxQWBMpn8vQ1+zGs982ZotmeQPUqFocTPyqLl3VFQ5PWFT\nHV39al70Slg9VfhFRilj2e/sc/x5ThzOiZaYHXTIN9vi9Se7kt9X+poBFNZL\n3XrOc/RZ0zv4q+ufp5HdYOmVHPUlOHkbneiWL1Yuht3VcegGyf1+K2zYoKZM\noSthq9OtQYG+Ug2XRy9qFFehzzXK9fq2KW/SkWtkGgUije2bP15+FThpWqJf\nK+Gj5pkR2EI8yhEkZH8IGWSUAUxA2wJ3fQ/ynKDFw8Bp1z9RoZTAUSLyFvB7\nXqFJdsrTRS89u1GwXIRY1+c+aQeRQFntDTn9cegkH7Ducmr0qnGd1+qGNK/A\n2rziKjUpOweotD+2j8cy+XdfkfWUBochUu0l5f6oxElDvF/eKheqggkj3y/8\n0bs4eaQ4SCJ6VK9Zbn1nv0Lkdx0edHEVGKzydqDGkfT7whGUIAMrVi9xS0Gf\n0H81B1vK6pc/r51Io54GzeX9FXVxB60LrADu/wBUIM2KCBwEaIdgAdlqZErF\njBdmhcQryQ/YLkCE9zZ51d1cbP8AQo2sq4/dgCcueh0mX+qibj/CWNPsKJOZ\n6UXhGDuI/us8QGW5d+VSpK/LTlTEGIKULGnXFqAdWTevP+KYOeRLh1aQkIi9\nv39kWtQS+kKDiUA6ck5P3BTn86dAX8UQbJ1EWep9uv2XByhplbFOhaPuVMNr\nkDXKwBFIYF9lSStyqODo+fNJyDlCumMU6p8ATM+ftSU0VIznezJ3q8U2+pv9\nsg5nJMSXeq9zaibAABgDB9aEWAlpHdy+sUaEJQAPPc8Ujj2bVyIuetIGrbxe\nIfSjXbweyhD3f46LmPyH2KLd2yj1gqFY5/0fzS0akpEMAGlCEBKSRzYvQyBG\nW88VAy9bFPsKUScjB8J70gEuJI/Z8/QgS7x70AwInOQ4fvv9mWhJniOjtSeY\nTDoBBR8XQRQLQFmkUt2LFREjdOyhjYNho0BFpinDexBvVqLO0UgSIDunYNud\nKgvBQHbX7N74efDJ3JPFTazj0+yqCUi0W74t2qRWJPjYV0KvpnGHss8N3466\nhRvrnegsnYSzgXF4bw/EKmTvcockcrBEdjJxsZZOO86eQMsEe1ERrRfC4Bh5\n0egmgx6lbUfw0pGcsJx3SKBDRJMHMtcpEWST6AC7tRd5IgfQvQkDUQGBRNiM\nEzymbrrSEv7ZORzqTysAL2OG7k/2nbmWggGkM6ohF7tOO845DkoO6xVpkiVZ\nk3WtQ8kQ/DDJ2+w2MdCAmmGSRLzPQPWkUdjulEagsG0ptQEIBAFgKQhTsSor\nOllY2fIjphw02Rg+JE9ShYz5r5fZV6qzvcqxJepW64MFIOfmkIEdmFEhSZh5\nKCxnzSkCTeiDTAwHRGzU0CtIJ+RIDGkpoU2YYJXU2chKl2Y0rAh1Yomw9GaC\nABBmYIOUmRb2TWkvWKkk8EV3iNWi/YBgDQCxSAKXQozsQgu7mQ0SpXg/CLyB\nDQdfNIQJ2YUojAIdRKBLiWz4BgCyFpHehTxCjZh4Z81vSl+v1oRQo9Ff0GhR\ngg6Qh6FfLbqsr4wUmo0vBvg6V8vsr4LaunpJseDCFwRd5UU6S4dpGaC7F0SZ\nF1owUJiDReSvgtuFz4vamqFHTrSsqupT8TucA/p2lEpNVrycMhiiJDbeEy+R\n3VPQkdcAe1TvwP1oDrXYB7qCJafxp8tu4rgLwf4OlfL7K+C24fPn9lHC18vu\nowV8bsr4LbhE+L24h4PyO5wD+leEfJ04ZDFHSi3MJDIzdURWz4EFjWCiviSB\n8c6h3ZYeZKTOG+SPr2hwdj9UIMwe4r5bdxXAXg/wdK+X2V8Ftw+fP7KOFr5f\ndRgr43ZXwW3CJ8XtxDwfkdzgH9K8I+TpwyGKfEXXvqdIHoqLV4ey5BgW00co\nATgTaTdUBXbQKAQIBAbBUSYU83+u58EPU0xiQQ3ZUkxkWqRD5GgLBzJE8o1i\nalocsCmZV/ulq1lPCyA8pKMFADRrSKUgzFOndAnoUExbHIDXdXihAchemjha\n+X3UYKAgzWkUpBmKdNlA8FAMuuwDHv6FCVBycxHZGk8LWhCNAn+KIyieAgoV\n/wB0YJETqAHloZprcUC9vUoKhqRRvRC9dcVimShc32NpS9RoxW2qSEvFc5hR\ncCFwCR7iVMYUFgKx5N3NMfE6SSUeoL5P13BxNGtIATZdcyw4hudHMp/hFmZ5\nKTwcPSqnNiFZJUKam2hN6uXiRk0C2ZqHB9LGrCNyN9jhqTYEzJekhPBVj+Ia\nhw+3fXmrQQQLZRCE2mPeo60n1VOLTckR6GjbsgEQjcgs8+Pr0nQBmyeYTwUm\nBSyAEOdbnfVaSQmQhl1kdVrszMJD1A8UlpOgjoSZScxWDWAvA9WKBsIsCRBW\nfS5INM0TJsvkqR1OHo7GZhPVjyJYNmlQ4fMsAK6onvUVaSUVACcSbQKSigOh\npJxkpSKWEGIJLzREQabIJpjyQ9H17BJp6lZOtIIiCNkdabvGVFGwMtcBNW+i\n3J9Ec8qGskggGVXBRx1IPUiExivln6osfRgpna2btK2fh8qm8k7CWBMZuUZT\npRiOEQvSYPlN8gHpUFLQoA9BE0wlzCgrsIiaR8gLZOTzogGEGUmDFZIiSjkl\nmoXlxce8Rhad6noZG7vyKHHHdAvMXoMPaI8BQQM2QPkElJ4bFM9k2BLbWvln\n6pOZO43zFEiKneXURNJXEX/2HOiiUdRGzyr/AD9XGvBROnAxbwXgj60ImSPh\nP3QAXPIg8fl9qwZYlrUdzqVc9QR180nMzO9Y6+a5qnG716uZieteTNCy/GzJ\nXPoB80gec+ogHJiT+6esPLAr9oIOcb0QsUsAgPSraLJGZQTyA6g30AjLSQAa\nwFTVpzcjxQmaRI5InVRCO8lylK3Jtd9R180vADCJH3ocpQoGyNmg2ghtsQ8E\n2mNKc8cN8V/uv/Wgcl6EN3uVNzcLuj2jj8PtxyhAwI8A9U+imPet15uAWJON\nsHuBJ5bqsTHYXJz2p6H0hanc+un4TZ4JnDV9an0tdE1HUkHqlQt1h4+skNN6\npb1ikGUMD8Mhx+H24ZMRFWRJmrIAiRH24eqfRTHvW681BYzU6wp8KbjojCOi\nUHg40AEAcg+kWp296n4TZ4pgp1fwAQLYs1otQIhLOq8Xs+PomRbidx9YqJ6p\nL3+xCV4xrePZx+H24ZJrXNFESJhonWIaOSE34eqfRTHvW681CbtfNAk8tGmx\ngSnKNl5gTtRHzl6gx0CV050pxxkKiV+gWp296n4TZ4JnFRFHzJU6Lop1VJX8\nakLtiMpMc4okw7OEHkA6c91fojlkjvz/AA7fZaao0TP8DHloZwL953IeHw+3\n05QoBkWk4C9aGcVFPq1hKZX4Kc0SBCCkmkxSnMCneYnySs1D4nlVsV2VYSx0\nPPNWMWu/2hIcuavltvAWSNE5vIHoPerpjY1oR7K3KH0zQ3n2UT1cGAErTlYi\nbT104aaEHusRDeB6Sa1koQMlaMCPaUnRtxjizh6A80xCtu6rdfsmuedqJDTP\nCHWJ/fMd+XC4YUbsUrIs5DSE6DAeY57EJiZiiLAmKRBVPZrUNnhQUgGaBeAT\nZbxpU+8nCLCihNGJ5tQ2VKWpchPMCvmrcgrAC5ocurutSakkucstdxG9BDJe\n49bM+aYCydMBJBhmafiAOaFLes3oohoBmAJjopvAAlIhEQjFQFmDUPEC4SwP\nUtRgWm8RPWkNlTFOC5ZuSBZmAc5pq1olyxBwrppUIwqRycEcQwmdca1DZUo4\nAOIMzCIji06NZ1WDse9BjAj7ThOFiZyPcz0mjIEDfGnd78J01uDX+To8IzEB\nr/J0AAABgCKAQAbJJX+TpSUtwHBSUN0LQLITyPH/ACdIy1iQOCrKzumv8vQQ\nQWNiiYI2Sa/ydBIAtAR4r/J1P3zYODnRV78YMtNwYuorl+23IbnOl/qo0w5P\nc/qo/wDZWpyeZ+SxFmCA1pYcqNNzzfmKAAQFg+5EUUSZWg5lSxnYLRg/YfxR\nalEJEcJ+O2JcVIs2ngv09c7UJvOV3fvNMmQJf2DqUZVzi7yP5qUUNZCRNz8V\nQFUAurTqlPxB1a9K3Usv1+BH+4iXP2blTyCsGybnuv7rUaMZHZNH8MzuyqAo\n0H2TYee3J5q37rP4TTEA5HcdHnUwRCCU0Dh6+1HoVae/8LPr+CaGGzXOr/VC\nJE0nSNXm1CyN3V/Du4Bt4BUmpE+aVIdhw0rZth1g8hWUbqx4wa0HRx9wQM/7\nDQ708qlmV5z0dopyeW8af3XTH4mYyoJjCvbHnigiJI6NTjNNseKgZx3es/VO\nDzWY8v5oglmiHqSUFPXc+Jovi5yqHZqHZpEyJ1ohTTMb91NHRL6rHrUiqXT4\njzQyuf5Bd71HrVtgoEABofizUQmHOp+h9ZkEOZNaz6kVpd1JpvCUBbEOVbaQ\nODRJIvvSmVXUr0JD8c0yibBUrphtGD/jwV4iDl07Mvbb/j23t7ar9GaUApRl\nXL/wf//Z\n",
             "profile_image_url": "https://scontent-lga3-2.cdninstagram.com/v/t51.2885-19/s320x320/140147431_1774300986064005_6293252472554050502_n.jpg?_nc_ht=scontent-lga3-2.cdninstagram.com&_nc_cat=109&_nc_ohc=52nh5un1ZvYAX-NkHJm&edm=ABfd0MgBAAAA&ccb=7-4&oh=00_AT98sObhI4L-eWfL78EG3CLwpYkXgB7O58dV5xd9xYI_Ng&oe=620B3CBE&_nc_sid=7bff83",
             "profile_link": null,
             "verified": false
            }')
  end

  def teardown
    if File.exist?("tmp/zorki") && File.directory?("tmp/zorki")
      FileUtils.rm_r "tmp/zorki"
    end
  end

  test "can create instagram user" do
    archive_entity = Sources::InstagramUser.create_from_zorki_hash([@zorki_user]).first
    assert_not_nil archive_entity
    assert_kind_of ArchiveEntity, archive_entity

    assert_equal @zorki_user["username"], archive_entity.instagram_user.handle
    assert_equal @zorki_user["name"], archive_entity.instagram_user.display_name
    assert_equal @zorki_user["username"], archive_entity.service_id
    assert_equal @zorki_user["profile_link"], archive_entity.instagram_user.url

    # I have NO idea why this isn't working using dot-style access, but it's not, so we'll keep it
    # like this for awhile
    assert_equal @zorki_user["profile_image_url"], archive_entity.instagram_user[:profile_image_url]
    assert_equal @zorki_user["number_of_followers"], archive_entity.instagram_user.followers_count
    assert_equal @zorki_user["number_of_following"], archive_entity.instagram_user.following_count

    assert_not_nil archive_entity.instagram_user.profile_image
  end

  test "can update instagram user" do
    archive_entity = Sources::InstagramUser.create_from_zorki_hash([@zorki_user]).first

    # Set a property to something random
    archive_entity.instagram_user.update!({ followers_count: 2 })
    assert_equal archive_entity.instagram_user.followers_count, 2
    # Now try and save it again, and make sure the followers count is correct
    archive_entity2 = Sources::InstagramUser.create_from_zorki_hash([@zorki_user]).first.instagram_user
    assert_equal archive_entity.service_id, archive_entity2.service_id
    assert_equal @zorki_user["number_of_followers"], archive_entity2.followers_count
  end
end
