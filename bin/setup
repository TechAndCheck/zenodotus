#!/usr/bin/env ruby
require "fileutils"

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  # Install JavaScript dependencies
  system! 'bin/yarn'

  # We can't use helpers here so we have to explicitly check the environmental variable
  unless ENV["PRODUCTION_DATABASE_URL"].nil?
    puts "\n== Duplicating database from production =="
    # A quick note if you're doing this manually, make sure that $DATABASE_URL has the final database
    # you want to dump to. Otherwise, it'll dump into a database with the same name as the production
    # database, which is probably not what you want.
    #
    # For some reason, piping it directly in has stopped working, however, saving the file does seem to work
    system! 'pg_dump -Fc $PRODUCTION_DATABASE_URL > temp.dump'
    system! 'pg_restore --clean --no-owner --no-acl -n public -d $DATABASE_URL temp.dump'
    system! 'rm temp.dump'

    puts "\n== Done duplicating =="
  else
    puts "\n== Preparing database =="
    system! 'bin/rails db:setup'
  end

  # puts "\n== Copying sample files =="
  # unless File.exist?('config/database.yml')
  #   FileUtils.cp 'config/database.yml.sample', 'config/database.yml'
  # end

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'
end
